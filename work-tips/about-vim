

# 2014/03/08
-------------------------------
程序员用 vim 编辑代码的常用技巧 
-------------------------------
    http://gmd20.blog.163.com/blog/static/16843923201212365744122/

    vim查找操作
    http://www.blogjava.net/lingy/archive/2009/09/02/293576.html

    vim入门,进阶与折腾
    http://godorz.info/2012/01/vim/

    vim 用法
    http://my.oschina.net/alphajay/blog/42621

    Vim使用笔记
    http://www.cnblogs.com/jiqingwu/archive/2012/06/14/vim_notes.html
    

-----------------------------------
jie-zhang总结困扰过个人的操作极巧。
-----------------------------------


1. vim 取消高亮显示
    进入vim或编辑完毕按esc后，输入/可帮助查找字符串，例如/main帮助查找main函数，找到的main高亮显示。

    取消高量显示的两个办法：

    (1）按esc键，输入:nohl
    (2）按esc键，查找不存在的字符串，例如/asdfa

2.:edit  打开另外一个文件， 可以用<TAB> 补全
    (一直在:tabnew后使用:open 来打开，无法使用TAB补全.....)

3. set autochdir " 自动切换当前目录为当前文件所在的目录

4. 块格式化，块缩进
    (1)全局格式化gg=G
    (2)v或者ctrl+v进入块编辑模式，选中要编辑的块, <键左缩进或者>右缩进。
       然后，如果要重复操作，按.键重复。u撤销一步，ctrl+r重做一步。

5. vim的多窗口

    :tabnew [++opt选项] ［＋cmd］ 文件            建立对指定文件新的tab
    :tabc     关闭当前的tab        :或者q
    :tabo     关闭所有其他的tab    :tabonly
    :tabs     查看所有打开的tab    :★
    :tabp     前一个               :tabprevious
    :tabn     下一个               :tabnext
    :tabfir   第一个tab
    :tabl     最后一个tab
    :tabn (n) 切换到第n个tab       :★
    (n)gt     切换到第n个tab       :★
    :tabd (cmd) 对所有tab执行命名，例如保存所有tab:  :tabd w

    标准模式下：
    gt , gT 可以直接在tab之间切换。

    ---- 以下未验证
    更改窗口宽度的命令是: Crtl+w > 将当前窗口向右边扩展一行，将 > 换成 < 就是向左边扩展一行。也可以在之前使用数字代表扩展的行数， 5 Ctrl+w > ,向右边扩展5行。

    更改窗口高度类似，只是命令是Ctrl+w + ，增加高度，- 减小高度。
    参考:
    http://hi.baidu.com/dt_zhangwei/item/c4804715b684cff965eabfa5
    http://xiaozh.net/3/55.htm
    vim折叠的用法: http://xiaozh.net/3/54.htm

6. vim 查看文件编码，设置编码
    查看编码
        file 文件1, 文件2.....
        例如，查看文件夹里所有文件编码: file *
    设置编码
        
    设置编码(encoding: Vim 内部使用的字符编码方式，包括 Vim 的 buffer (缓冲区)、菜单文本、消息文本等。默认是根据你的locale选择.用户手册上建议只在 .vimrc 中改变它的值)
    set enc=utf-8 

    设置文件编码(fileencoding: Vim 中当前编辑的文件的字符编码方式，Vim 保存文件时也会将文件保存为这种字符编码方式 (不管是否新文件都如此)。 )
    set fenc=utf-8

    设置文件编码family(fileencodings: Vim自动探测fileencoding的顺序列表， 启动时会按照它所列出的字符编码方式逐一探测即将打开的文件的字符编码方式，并且将 fileencoding 设置为最终探测到的字符编码方式。因此最好将Unicode 编码方式放到这个列表的最前面，将拉丁语系编码方式 latin1 放到最后面。 )
    set fencs=utf-8,db2312.....

    参考:
    http://blog.163.com/sea_haitao/blog/static/7756216200942552859673/

7. tab 空格设置
    1) 设定 tab 的位置
    :set tabstop=4

    2) 输入 tab 时自动将其转化为空格
    :set expandtab
    如果此时需要输入真正的 tab，则输入 Ctrl+V, tab，在 Windows 下是 Ctrl+Q, tab

    3) 将已存在的 tab 都转化为空格
    :retab

    参考：
    http://www.cnblogs.com/panliang188/archive/2010/04/20/1715836.html

8. 简单的(输入过的)单词补全
    VIM 有一个非常漂亮的关键词自动完成系统。这表示，你可以输入一个长词的一部分，然后按一下某个键，然后 VIM 就替你完成了这个长词的输入了。举个例子：你有一个变量名为 iAmALongAndAwkwardVarName 在你写的代码的某个地方。也许你不想每回都自己一个一个字母的去输入它。
    使用关键词自动完成功能，你只需要输入开始几个字母（比如 iAmAL），然后按 <C-N>（按住 Ctrl，再按 N）或者 <C-P>。如果 VIM 没有给出你想要的词，继续按，直到你满意为止，VIM 会一直循环它找到的匹配的字符串。

    Ctrl + N : Next
    Ctrl + P: Privious

9. 提高使用效率的小技巧
    1) 简单查找的快捷方法
    查找单词
    ‘*’可以查找当前光标下的word（完全符合），‘g*’则部分符合，以#代替*表示向后（上）找。

    2) 避免重复
    令人惊奇的 . 命令
    输入 . (小数点符号），将会重复你输入的上一个命令。比如，你上个命令为“dw”（删除一个词），VI 将会接着再删除一个词。

    3) 使用数字
    使用数字也是 VIM 强大的而且很节省时间的重要特性之一。在很多 VIM 的命令之前都可以使用一个数字，这个数字将会告诉 VIM 这个命令需要执行几次。比如：
    3j 将会把光标向下移动三行。
    10dd 将会删除十行。
    y3t″ 将会拷贝从当前光标到第三个出现的引号之间的内容到剪贴板。
    数字是扩展 motion 命令作用域非常有效的方法。   

10. 定位上次修改的地方(Eclispse中的Ctrl + Q)
    `" 上次你离开该文件时光标所在的位置
    `. 最后一次对文件做出改动处

11. Ubuntu下创建vim+Taglist+cscope+ctags组合编辑器 
    http://blog.csdn.net/longerzone/article/details/7789581

12. vim中的记录功能
    高级一些的编辑器，都会包含宏功能，vim当然不能缺少了，在vim中使用宏是非常方便的：
    qx     开始记录宏，并将结果存入寄存器x
    q     退出记录模式
    @x     播放记录在x寄存器中的宏命令
    稍微解释一下，当在normal模式下输入:qx后，你对文本的所有编辑动作将会被记录下来，再次输入q即退出了记录模
    式，然后输入@x对刚才记录下来的命令进行重复，此命令后可跟数字，表示要重复多少次，比如@x20，可以重复20次。这个在文本的批处理中是非常有用的。
    同时编辑多个文件 

    一些vim命令记录 
    http://blog.csdn.net/kidxueying/article/details/6854962

13. 设置显示换行不换行
    :set wrap
    :set nowrap

14. 16进制编码
    :%!xxd 16进制编辑
    :%!xxd -r 文本编辑

15. 宏记录功能
    想重复一些复杂的操作时,利用宏记录功能可以轻松实现完成: 
 
    如果想在文本中输入1-100个数字,每个一行,现在就用记录来实现吧: 
     
    1)在插入模式下输入:1
     
    2)按下q开始记录,接着按下w给宏记录命名为"w"
     
    3)需要记录的操作是:首先yy复制当前行, 粘贴当前行,光标在1上,按下ctrl+a,给1+1变成2
     
    4)推出宏, 按下q
     
    5)回放宏"w"98次, 输入98@w即可.

16. 设置只读
    文件打开后，运行底行命令
    :set ma 或者 :set modifiable
    :set noma 或者 :set nomodifiable

    vim -R file: 以只读的方式打开文件，但可以强制保存；
    vim -M file: 以只读的方式打开文件，不可以强制保存；

    参考：
    http://www.cnblogs.com/jiqingwu/archive/2012/06/14/vim_notes.html

  
